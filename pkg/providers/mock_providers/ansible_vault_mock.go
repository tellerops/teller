// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/providers/ansible_vault.go

// Package mock_providers is a generated GoMock package.
package mock_providers

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAnsibleVaultClient is a mock of AnsibleVaultClient interface.
type MockAnsibleVaultClient struct {
	ctrl     *gomock.Controller
	recorder *MockAnsibleVaultClientMockRecorder
}

// MockAnsibleVaultClientMockRecorder is the mock recorder for MockAnsibleVaultClient.
type MockAnsibleVaultClientMockRecorder struct {
	mock *MockAnsibleVaultClient
}

// NewMockAnsibleVaultClient creates a new mock instance.
func NewMockAnsibleVaultClient(ctrl *gomock.Controller) *MockAnsibleVaultClient {
	mock := &MockAnsibleVaultClient{ctrl: ctrl}
	mock.recorder = &MockAnsibleVaultClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAnsibleVaultClient) EXPECT() *MockAnsibleVaultClientMockRecorder {
	return m.recorder
}

// Read mocks base method.
func (m *MockAnsibleVaultClient) Read(p string) (map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read", p)
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockAnsibleVaultClientMockRecorder) Read(p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockAnsibleVaultClient)(nil).Read), p)
}
