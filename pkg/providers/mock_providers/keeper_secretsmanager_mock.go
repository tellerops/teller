// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/providers/keeper_secretsmanager.go

// Package mock_providers is a generated GoMock package.
package mock_providers

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	core "github.com/spectralops/teller/pkg/core"
)

// MockKsmClient is a mock of KsmClient interface.
type MockKsmClient struct {
	ctrl     *gomock.Controller
	recorder *MockKsmClientMockRecorder
}

// MockKsmClientMockRecorder is the mock recorder for MockKsmClient.
type MockKsmClientMockRecorder struct {
	mock *MockKsmClient
}

// NewMockKsmClient creates a new mock instance.
func NewMockKsmClient(ctrl *gomock.Controller) *MockKsmClient {
	mock := &MockKsmClient{ctrl: ctrl}
	mock.recorder = &MockKsmClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKsmClient) EXPECT() *MockKsmClientMockRecorder {
	return m.recorder
}

// GetSecret mocks base method.
func (m *MockKsmClient) GetSecret(p core.KeyPath) (*core.EnvEntry, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecret", p)
	ret0, _ := ret[0].(*core.EnvEntry)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecret indicates an expected call of GetSecret.
func (mr *MockKsmClientMockRecorder) GetSecret(p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecret", reflect.TypeOf((*MockKsmClient)(nil).GetSecret), p)
}

// GetSecrets mocks base method.
func (m *MockKsmClient) GetSecrets(p core.KeyPath) ([]core.EnvEntry, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecrets", p)
	ret0, _ := ret[0].([]core.EnvEntry)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecrets indicates an expected call of GetSecrets.
func (mr *MockKsmClientMockRecorder) GetSecrets(p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecrets", reflect.TypeOf((*MockKsmClient)(nil).GetSecrets), p)
}
